{"version":3,"sources":["context.js","components/cards/Search.js","components/layout/Navbar.js","components/layout/Spinner.js","components/cards/Card.js","components/cards/Cards.js","components/cards/Sort.js","components/layout/Index.js","components/cards/Details.js","App.js","serviceWorker.js","index.js","components/layout/default_card.jpg","components/layout/mtg_logo.png","components/layout/fingers.gif"],"names":["Context","React","createContext","reducer","state","action","type","card_list","payload","heading","currSearchType","length","currSortType","Provider","dispatch","setState","axios","get","process","then","res","data","cards","catch","err","console","log","value","this","props","children","Component","Consumer","Search","cardName","findCard","e","preventDefault","onChange","target","name","onSubmit","bind","className","placeholder","Navbar","href","src","mtgLogo","alt","spinner","style","width","margin","display","Card","card","flipped","cardDetail","onClick","flipCard","imageUrl","defaultCard","btnText","artist","setName","originalType","power","toughness","rarity","Cards","loading","undefined","Spinner","Fragment","map","item","key","id","Sort","sortType","sortBy","title","variant","onSelect","Item","as","eventKey","Index","Details","match","params","Object","keys","to","flavor","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.567102ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SEARCH_CARDS':\n            return {\n                ...state,\n                card_list: action.payload,\n                heading: `Creature Search Results: ${action.currSearchType} - ${action.payload.length} results`\n            };\n        case 'SORT_CARDS':\n            return {\n                ...state,\n                card_list: action.payload,\n                heading: `Creature Sort Results: ${action.currSortType} - ${action.payload.length} results`\n            };\n        default:\n            return state;\n    }\n}\n\nconst pageSize = 'pageSize=20';\nconst pageNum = 'page=1';\n\nexport class Provider extends Component {\n    state = {\n        card_list: [],\n        heading: 'Creature Character Cards',\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n    \n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&${pageSize}&${pageNum}`)\n            .then(res => {\n                 // console.log('res.data',res.data);\n                this.setState({card_list: res.data.cards});\n            })\n            .catch(err => console.log('error',err));\n    }\n    \n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Search extends Component {\n    state = {\n        cardName: '',\n        card_list: []\n    };\n\n\n    findCard = (dispatch, e) => {\n        e.preventDefault();\n\n        //This will cause the \"loading\" icon to show by clearing payload count\n        dispatch({\n            type: 'SEARCH_CARDS',\n            payload: []\n        });\n\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&orderBy=name&${process.env.REACT_APP_MAIN_FILTER}&name=${this.state.cardName}`)\n\n            .then(res => {\n                dispatch({\n                   type: 'SEARCH_CARDS',\n                    payload: res.data.cards,\n                    currSearchType: this.state.cardName\n                });\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <form onSubmit={this.findCard.bind(this, dispatch)} className=\"form-inline my-2 my-lg-0\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mr-sm-2\"\n                                placeholder=\"Character Search\"\n                                name=\"cardName\"\n                                onChange={this.onChange}\n                                value={this.state.cardName}\n                            />\n                            <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport mtgLogo from './mtg_logo.png';\nimport Search from '../cards/Search';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\n            <a href=\"/\"><img src={mtgLogo} alt=\"Magic: The Gathering\" /></a>\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Creature Character Listings</span>\n            <Search />\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport spinner from './fingers.gif';\n\nexport default () => {\n    return (\n        <div>\n            <img\n                src={spinner}\n                alt=\"Loading ...\"\n                style={{ width: '200px', margin: ' 40px auto', display: 'block' }}\n            />\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport defaultCard from '../layout/default_card.jpg';\n\nclass Card extends Component {\n    card = this.props.card;\n\n    state = {\n       flipped: false\n    };\n\n    cardDetail = <div className=\"card-click mb-2\" onClick={this.flipCard}><img src={this.card.imageUrl ? this.card.imageUrl : defaultCard} alt={this.card.name} /></div>;\n\n    btnText = 'View Details';\n\n    flipCard = () => {\n        if (this.state.flipped === true) {\n            this.cardDetail = <img src={this.card.imageUrl ? this.card.imageUrl : defaultCard} alt={this.card.name} />;\n            this.btnText = 'View Details';\n            this.setState({flipped: false});\n        } else {\n            this.cardDetail = <ul className=\"text-white pt-3 pr-2\">\n                    <li>Artist: <span className=\"font-weight-bold\">{this.card.artist}</span></li>\n                    <li>Set Name: <span className=\"font-weight-bold\">{this.card.setName}</span></li>\n                    <li>Type: <span className=\"font-weight-bold\">{this.card.type}</span></li>\n                    <li>Original Type: <span className=\"font-weight-bold\">{this.card.originalType}</span></li>\n                    <li>Power: <span className=\"font-weight-bold\">{this.card.power}</span></li>\n                    <li>Toughness: <span className=\"font-weight-bold\">{this.card.toughness}</span></li>\n                    <li>Rarity: <span className=\"font-weight-bold\">{this.card.rarity}</span></li>\n                </ul>;\n            this.btnText = 'View Card';\n            this.setState({flipped: true});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-auto mb-3\">\n                <div className=\"card shadow-sm\">\n                    <div className=\"card-body\">\n                        <h5>{this.card.name}</h5>\n                        <div className=\"card-click card-detail mb-2\" onClick={this.flipCard}>\n                            {this.cardDetail}\n                        </div>\n                        <button onClick={this.flipCard} className=\"btn btn-dark btn-block\">\n                            <i className=\"fas fa-chevron-right\"></i> {this.btnText}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Card from './Card';\n\nclass Cards extends Component {\n\n    state = {\n        loading: true\n    };\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { card_list, heading } = value;\n                    if(card_list === undefined || card_list.length === 0) {\n                        return <Spinner />\n                    } else {\n                        return (\n                            <React.Fragment>\n                                <h3 className=\"text-center text-white mb-4\">{heading}</h3>\n                                <div className=\"row\">\n                                        {card_list.map(item => (\n                                            <Card key={item.id} card={item} />\n                                        ))}\n                                </div>\n                            </React.Fragment>\n                        );\n                    }\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Cards;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass Sort extends Component {\n    state = {\n        sortType: ''\n    };\n\n\n    sortBy = (dispatch, e) => {\n        e.preventDefault();\n\n        //This will cause the \"loading\" icon to show by clearing payload count\n        dispatch({\n            type: 'SORT_CARDS',\n            payload: []\n        });\n\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&pageSize=20&orderBy=${this.state.sortType}`)\n\n            .then(res => {\n                dispatch({\n                   type: 'SORT_CARDS',\n                    payload: res.data.cards,\n                    currSortType: this.state.sortType\n                });\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    onChange = (e) => {\n        this.setState({sortType: e});\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <form onSubmit={this.sortBy.bind(this, dispatch)} className=\"form-inline my-2 my-lg-0\">\n                            <DropdownButton id=\"dropdown-item-button\" title=\"Sort By\" variant=\"secondary\" name=\"sortType\" onSelect={this.onChange}>\n                                <Dropdown.Item as=\"button\" eventKey=\"name\">Name</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"type\">Type</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"artist\">Artist</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"setName\">Set Name</Dropdown.Item>\n                            </DropdownButton>\n                        </form>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Sort;","import React from 'react';\nimport Cards from '../cards/Cards';\nimport Sort from '../cards/Sort';\n// import Lazyload from '../cards/Lazyload';\n\nconst Index = () => {\n    return (\n       <React.Fragment>\n           <Sort />\n           <Cards />\n\n       </React.Fragment>\n    )\n}\n\nexport default Index;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport defaultCard from '../layout/default_card.jpg';\n\nclass Details extends Component {\n    state = {\n        card: {}\n    }\n\n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards/${this.props.match.params.id}`)\n            .then(res => {\n                this.setState({card: res.data.card});\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    render() {\n        const { card } = this.state;\n        if(\n            card === undefined ||\n            Object.keys(card).length === 0\n        ) {\n            return <Spinner />\n        } else {\n            return (\n                <React.Fragment>\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4 mt-0\"><i className=\"fas fa-chevron-left\"></i> Back</Link>\n                    <div className=\"row justify-content-center mb-3\">\n                        <div className=\"detail card shadow-sm mb-2\">\n                            <div className=\"card-body\">\n                                <div>\n                                    <img src={card.imageUrl ? card.imageUrl : defaultCard} alt={card.name} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"detail card-info float-left\">\n                            <ul className=\"text-white\">\n                                <li>Name: <span className=\"font-weight-bold\">{card.name}</span></li>\n                                <li>Artist: <span className=\"font-weight-bold\">{card.artist}</span></li>\n                                <li>Set Name: <span className=\"font-weight-bold\">{card.setName}</span></li>\n                                <li>Type: <span className=\"font-weight-bold\">{card.type}</span></li>\n                                <li>Original Type: <span className=\"font-weight-bold\">{card.originalType}</span></li>\n                                <li>Power: <span className=\"font-weight-bold\">{card.power}</span></li>\n                                <li>Toughness: <span className=\"font-weight-bold\">{card.toughness}</span></li>\n                                <li>Flavor: <span className=\"font-weight-bold\">{card.flavor}</span></li>\n                                <li>Rarity: <span className=\"font-weight-bold\">{card.rarity}</span></li>\n                            </ul>\n                        </div>\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default Details;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Details from './components/cards/Details';\nimport { Provider } from './context';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n                <React.Fragment>\n                    <Navbar />\n                    <div className=\"container-fluid justify-content-center\">\n                        <Switch>\n                            <Route path=\"/\" component={Index}/>\n                            <Route path=\"/details/card/:id\" component={Details}/>\n                        </Switch>\n                    </div>\n                </React.Fragment>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default_card.5329c291.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mtg_logo.9c928612.png\";","module.exports = __webpack_public_path__ + \"static/media/fingers.748b5b62.gif\";"],"sourceRoot":""}