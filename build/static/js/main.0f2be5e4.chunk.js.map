{"version":3,"sources":["components/layout/Spinner.js","components/cards/Card.js","components/cards/Lazyload.js","context.js","components/cards/Search.js","components/layout/Navbar.js","components/cards/Cards.js","components/cards/Sort.js","components/layout/Index.js","components/cards/Details.js","App.js","serviceWorker.js","index.js","components/layout/default_card.jpg","components/layout/mtg_logo.png","components/layout/fingers.gif"],"names":["src","spinner","alt","style","width","margin","display","Card","card","props","state","flipped","cardDetail","className","onClick","flipCard","imageUrl","defaultCard","name","btnText","setState","artist","setName","type","originalType","power","toughness","rarity","this","Component","Lazyload","loadData","axios","get","process","pageSize","pageNum","then","res","card_list_new","data","cards","catch","err","console","log","lazyLoad","undefined","length","lazyLoading","Spinner","Fragment","map","item","key","id","card_list_prev","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","root","document","querySelector","rootMargin","observe","element","Consumer","value","card_list","ref","el","Context","React","createContext","reducer","action","payload","heading","currSearchType","currSortType","Provider","dispatch","children","Search","cardName","findCard","e","preventDefault","onChange","target","onSubmit","bind","placeholder","Navbar","href","mtgLogo","Cards","Sort","sortType","sortBy","title","variant","onSelect","Item","as","eventKey","Index","Details","match","params","Object","keys","to","flavor","App","path","component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0f2be5e4.chunk.js","sourcesContent":["import React from 'react';\nimport spinner from './fingers.gif';\n\nexport default () => {\n    return (\n        <div>\n            <img\n                src={spinner}\n                alt=\"Loading ...\"\n                style={{ width: '200px', margin: ' 40px auto', display: 'block' }}\n            />\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport defaultCard from '../layout/default_card.jpg';\n\nclass Card extends Component {\n    card = this.props.card;\n\n    state = {\n       flipped: false\n    };\n\n    cardDetail = <div className=\"card-click mb-2\" onClick={this.flipCard}><img src={this.card.imageUrl ? this.card.imageUrl : defaultCard} alt={this.card.name} /></div>;\n\n    btnText = 'View Details';\n\n    flipCard = () => {\n        if (this.state.flipped === true) {\n            this.cardDetail = <img src={this.card.imageUrl ? this.card.imageUrl : defaultCard} alt={this.card.name} />;\n            this.btnText = 'View Details';\n            this.setState({flipped: false});\n        } else {\n            this.cardDetail = <ul className=\"text-white pt-3 pr-2\">\n                    <li>Artist: <span className=\"font-weight-bold\">{this.card.artist}</span></li>\n                    <li>Set Name: <span className=\"font-weight-bold\">{this.card.setName}</span></li>\n                    <li>Type: <span className=\"font-weight-bold\">{this.card.type}</span></li>\n                    <li>Original Type: <span className=\"font-weight-bold\">{this.card.originalType}</span></li>\n                    <li>Power: <span className=\"font-weight-bold\">{this.card.power}</span></li>\n                    <li>Toughness: <span className=\"font-weight-bold\">{this.card.toughness}</span></li>\n                    <li>Rarity: <span className=\"font-weight-bold\">{this.card.rarity}</span></li>\n                </ul>;\n            this.btnText = 'View Card';\n            this.setState({flipped: true});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-auto mb-3\">\n                <div className=\"card shadow-sm\">\n                    <div className=\"card-body\">\n                        <h5>{this.card.name}</h5>\n                        <div className=\"card-click card-detail mb-2\" onClick={this.flipCard}>\n                            {this.cardDetail}\n                        </div>\n                        <button onClick={this.flipCard} className=\"btn btn-dark btn-block\">\n                            <i className=\"fas fa-chevron-right\"></i> {this.btnText}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Card from './Card';\n\nclass Lazyload extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            card_list_new: [],\n            pageSize: 'pageSize=10',\n            pageNum: 3,\n            lazyLoading: false\n        };\n        this.card_list_prev = [];\n    }\n\n    loadData = () => {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&${this.state.pageSize}&page=${this.state.pageNum}`)\n\n            .then(res => {\n                this.setState({card_list_new: res.data.cards});\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    lazyLoad = () => {\n        if(this.state.card_list_new === undefined || this.state.card_list_new.length === 0) {\n            if (this.state.lazyLoading === false) {\n                return;\n            } else {\n                return <Spinner />\n            }\n        } else {\n            return (\n                <React.Fragment>\n                    <div className=\"row\">\n                        {this.state.card_list_new.map(item => (\n                            <Card key={item.id} card={item} />\n                        ))}\n                    </div>\n                </React.Fragment>\n            );\n        }\n    }\n\n    componentDidMount() {\n        this.observer = new IntersectionObserver(\n            entries => {\n                entries.forEach(entry => {\n                    const { isIntersecting } = entry;\n\n                    if (isIntersecting) {\n                        if (this.card_list_prev.length > 0) {\n                            console.log('Intersection Occurred and loading Data ...');\n                            this.loadData();\n                            this.setState({lazyLoading: true});\n                        }\n                        // this.observer = this.observer.disconnect();\n                    }\n                });\n            },\n            {\n                root: document.querySelector(\".row\"),\n                rootMargin: \"0px 0px 200px 0px\"\n            }\n        );\n        this.observer.observe(this.element);\n        //after first lazy load is called, new element must be created for observer\n    }\n\n    render() {\n        return (\n        <Consumer>\n            {value => {\n                // console.log('Previous value.card_list',value.card_list);\n                this.card_list_prev = value.card_list;\n                return (\n                    <React.Fragment>\n                        <div ref={el => this.element = el} className=\"row-marker container-fluid justify-content-center\">\n                            {this.lazyLoad()}\n                        </div>\n                    </React.Fragment>\n                );\n            }}\n        </Consumer>\n        )\n    }\n}\n\nexport default Lazyload;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Lazyload from './components/cards/Lazyload';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SEARCH_CARDS':\n            return {\n                ...state,\n                card_list: action.payload,\n                heading: `Creature Search Results: ${action.currSearchType} - ${action.payload.length} results`\n            };\n        case 'SORT_CARDS':\n        return {\n            ...state,\n            card_list: action.payload,\n            heading: `Creature Sort Results: ${action.currSortType} - ${action.payload.length} results`\n        };\n        case 'LAZY_LOAD':\n            return {\n                ...state,\n                card_list: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        card_list: [],\n        heading: 'Creature Character Cards',\n        pageSize: 'pageSize=20',\n        pageNum: 'page=1',\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n    \n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&${this.state.pageSize}&${this.state.pageNum}`)\n            .then(res => {\n                 // console.log('res.data',res.data);\n                this.setState({card_list: res.data.cards});\n\n            })\n            .catch(err => console.log('error',err));\n    }\n    \n    render() {\n        // console.log('context render');\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n                <Lazyload />\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Search extends Component {\n    state = {\n        cardName: '',\n        card_list: []\n    };\n\n\n    findCard = (dispatch, e) => {\n        e.preventDefault();\n        console.log('e is ',e);\n        //This will cause the \"loading\" icon to show by clearing payload count\n        dispatch({\n            type: 'SEARCH_CARDS',\n            payload: []\n        });\n\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&orderBy=name&${process.env.REACT_APP_MAIN_FILTER}&name=${this.state.cardName}`)\n\n            .then(res => {\n                dispatch({\n                   type: 'SEARCH_CARDS',\n                    payload: res.data.cards,\n                    currSearchType: this.state.cardName\n                });\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <form onSubmit={this.findCard.bind(this, dispatch)} className=\"form-inline my-2 my-lg-0\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mr-sm-2\"\n                                placeholder=\"Character Search\"\n                                name=\"cardName\"\n                                onChange={this.onChange}\n                                value={this.state.cardName}\n                            />\n                            <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport mtgLogo from './mtg_logo.png';\nimport Search from '../cards/Search';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\n            <a href=\"/\"><img src={mtgLogo} alt=\"Magic: The Gathering\" /></a>\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Creature Character Listings</span>\n            <Search />\n        </nav>\n    )\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Card from './Card';\n\nclass Cards extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { card_list, heading } = value;\n                    if(card_list === undefined || card_list.length === 0) {\n                        return <Spinner />\n                    } else {\n                        return (\n                            <React.Fragment>\n                                <h3 className=\"text-center text-white mb-4\">{heading}</h3>\n                                <div className=\"row\">\n                                        {card_list.map(item => (\n                                            <Card key={item.id} card={item} />\n                                        ))}\n                                </div>\n                            </React.Fragment>\n                        );\n                    }\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Cards;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass Sort extends Component {\n    state = {\n        sortType: ''\n    };\n\n\n    sortBy = (dispatch, e) => {\n        e.preventDefault();\n\n        //This will cause the \"loading\" icon to show by clearing payload count\n        dispatch({\n            type: 'SORT_CARDS',\n            payload: []\n        });\n\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&pageSize=20&orderBy=${this.state.sortType}`)\n\n            .then(res => {\n                dispatch({\n                   type: 'SORT_CARDS',\n                    payload: res.data.cards,\n                    currSortType: this.state.sortType\n                });\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    onChange = (e) => {\n        this.setState({sortType: e});\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <form onSubmit={this.sortBy.bind(this, dispatch)} className=\"form-inline my-2 my-lg-0\">\n                            <DropdownButton id=\"dropdown-item-button\" title=\"Sort By\" variant=\"secondary\" name=\"sortType\" onSelect={this.onChange}>\n                                <Dropdown.Item as=\"button\" eventKey=\"name\">Name</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"type\">Type</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"artist\">Artist</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"setName\">Set Name</Dropdown.Item>\n                            </DropdownButton>\n                        </form>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Sort;","import React from 'react';\nimport Cards from '../cards/Cards';\nimport Sort from '../cards/Sort';\n// import Lazyload from '../cards/Lazyload';\n\nconst Index = () => {\n    return (\n       <React.Fragment>\n           <Sort />\n           <Cards />\n       </React.Fragment>\n    )\n}\n\nexport default Index;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport defaultCard from '../layout/default_card.jpg';\n\nclass Details extends Component {\n    state = {\n        card: {}\n    }\n\n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards/${this.props.match.params.id}`)\n            .then(res => {\n                this.setState({card: res.data.card});\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    render() {\n        const { card } = this.state;\n        if(\n            card === undefined ||\n            Object.keys(card).length === 0\n        ) {\n            return <Spinner />\n        } else {\n            return (\n                <React.Fragment>\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4 mt-0\"><i className=\"fas fa-chevron-left\"></i> Back</Link>\n                    <div className=\"row justify-content-center mb-3\">\n                        <div className=\"detail card shadow-sm mb-2\">\n                            <div className=\"card-body\">\n                                <div>\n                                    <img src={card.imageUrl ? card.imageUrl : defaultCard} alt={card.name} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"detail card-info float-left\">\n                            <ul className=\"text-white\">\n                                <li>Name: <span className=\"font-weight-bold\">{card.name}</span></li>\n                                <li>Artist: <span className=\"font-weight-bold\">{card.artist}</span></li>\n                                <li>Set Name: <span className=\"font-weight-bold\">{card.setName}</span></li>\n                                <li>Type: <span className=\"font-weight-bold\">{card.type}</span></li>\n                                <li>Original Type: <span className=\"font-weight-bold\">{card.originalType}</span></li>\n                                <li>Power: <span className=\"font-weight-bold\">{card.power}</span></li>\n                                <li>Toughness: <span className=\"font-weight-bold\">{card.toughness}</span></li>\n                                <li>Flavor: <span className=\"font-weight-bold\">{card.flavor}</span></li>\n                                <li>Rarity: <span className=\"font-weight-bold\">{card.rarity}</span></li>\n                            </ul>\n                        </div>\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default Details;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Details from './components/cards/Details';\nimport { Provider } from './context';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n                <React.Fragment>\n                    <Navbar />\n                    <div className=\"container-fluid justify-content-center\">\n                        <Switch>\n                            <Route path=\"/\" component={Index}/>\n                            <Route path=\"/details/card/:id\" component={Details}/>\n                        </Switch>\n                    </div>\n                </React.Fragment>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default_card.5329c291.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mtg_logo.9c928612.png\";","module.exports = __webpack_public_path__ + \"static/media/fingers.748b5b62.gif\";"],"sourceRoot":""}