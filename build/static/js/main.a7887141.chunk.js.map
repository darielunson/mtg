{"version":3,"sources":["context.js","components/cards/Search.js","components/layout/Navbar.js","components/layout/Spinner.js","components/cards/Card.js","components/cards/Lazyload.js","components/cards/Cards.js","components/cards/Sort.js","components/layout/Index.js","components/cards/Details.js","App.js","serviceWorker.js","index.js","components/layout/default_card.jpg","components/layout/mtg_logo.png","components/layout/fingers.gif"],"names":["Context","React","createContext","reducer","state","action","type","card_list","payload","heading","currSearchType","length","results","currSortType","Provider","pageSize","pageNum","dispatch","setState","axios","get","process","this","then","res","data","cards","catch","err","console","log","value","props","children","Component","Consumer","Search","cardName","findCard","e","preventDefault","onChange","target","name","onSubmit","bind","className","placeholder","Navbar","href","src","mtgLogo","alt","spinner","style","width","margin","display","Card","card","flipped","cardDetail","onClick","flipCard","imageUrl","defaultCard","btnText","artist","setName","originalType","power","toughness","rarity","Lazyload","loadData","card_list_new","lazyLoading","pages","concat","id","lazyLoad","undefined","Spinner","Fragment","map","item","key","ref","el","element","setIO","options","root","document","querySelector","rootMargin","threshold","isLeaving","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","card_original_length","disconnect","observe","prevY","Cards","resultCards","searchResults","Sort","sortType","sortBy","title","variant","onSelect","Item","as","eventKey","Index","Details","match","params","Object","keys","to","flavor","App","path","component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a7887141.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SEARCH_CARDS':\n            return {\n                ...state,\n                card_list: action.payload,\n                heading: `Creature Search Results: ${action.currSearchType} - ${action.payload.length} results`,\n                results: true\n            };\n        case 'NO_RESULTS':\n            return {\n                ...state,\n                card_list: action.payload,\n                heading: `Creature Search Results: ${action.currSearchType} - No results`,\n                results: false\n            };\n        case 'SORT_CARDS':\n            return {\n                ...state,\n                card_list: action.payload,\n                heading: `Creature Sort Results: ${action.currSortType} - ${action.payload.length} results`\n            };\n        case 'LAZY_LOAD':\n            return {\n                ...state,\n                card_list: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        card_list: [],\n        heading: 'Creature Character Cards',\n        pageSize: 'pageSize=20',\n        pageNum: 'page=1',\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n    \n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&${this.state.pageSize}&${this.state.pageNum}`)\n            .then(res => {\n                 // console.log('res.data',res.data);\n                this.setState({card_list: res.data.cards});\n\n            })\n            .catch(err => console.log('error',err));\n    }\n    \n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Search extends Component {\n    state = {\n        cardName: '',\n        card_list: []\n    };\n\n\n    findCard = (dispatch, e) => {\n        e.preventDefault();\n        //This will cause the \"loading\" icon to show by clearing payload count\n        dispatch({\n            type: 'SEARCH_CARDS',\n            payload: []\n        });\n\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&orderBy=name&${process.env.REACT_APP_MAIN_FILTER}&name=${this.state.cardName}`)\n\n            .then(res => {\n                if (res.data.cards.length > 0) {\n                    // console.log('data returned');\n                    dispatch({\n                        type: 'SEARCH_CARDS',\n                        payload: res.data.cards,\n                        currSearchType: this.state.cardName\n                    });\n                } else {\n                    // console.log('NO data returned');\n                    dispatch({\n                        type: 'NO_RESULTS',\n                        payload: res.data.cards,\n                        currSearchType: this.state.cardName\n                    });\n                }\n\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <form onSubmit={this.findCard.bind(this, dispatch)} className=\"form-inline my-2 my-lg-0\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mr-sm-2\"\n                                placeholder=\"Character Search\"\n                                name=\"cardName\"\n                                onChange={this.onChange}\n                                value={this.state.cardName}\n                            />\n                            <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport mtgLogo from './mtg_logo.png';\nimport Search from '../cards/Search';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\n            <a href=\"/\"><img src={mtgLogo} alt=\"Magic: The Gathering\" /></a>\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Creature Character Listings</span>\n            <Search />\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport spinner from './fingers.gif';\n\nexport default () => {\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <img\n                src={spinner}\n                alt=\"Loading ...\"\n                style={{ width: '200px', margin: ' 40px auto', display: 'block' }}\n            />\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport defaultCard from '../layout/default_card.jpg';\n\nclass Card extends Component {\n    card = this.props.card;\n\n    state = {\n       flipped: false\n    };\n\n    cardDetail = <div className=\"card-click mb-2\" onClick={this.flipCard}><img src={this.card.imageUrl ? this.card.imageUrl : defaultCard} alt={this.card.name} /></div>;\n\n    btnText = 'View Details';\n\n    flipCard = () => {\n        if (this.state.flipped === true) {\n            this.cardDetail = <img src={this.card.imageUrl ? this.card.imageUrl : defaultCard} alt={this.card.name} />;\n            this.btnText = 'View Details';\n            this.setState({flipped: false});\n        } else {\n            this.cardDetail = <ul className=\"text-white pt-3 pr-2\">\n                    <li>Artist: <span className=\"font-weight-bold\">{this.card.artist}</span></li>\n                    <li>Set Name: <span className=\"font-weight-bold\">{this.card.setName}</span></li>\n                    <li>Type: <span className=\"font-weight-bold\">{this.card.type}</span></li>\n                    <li>Original Type: <span className=\"font-weight-bold\">{this.card.originalType}</span></li>\n                    <li>Power: <span className=\"font-weight-bold\">{this.card.power}</span></li>\n                    <li>Toughness: <span className=\"font-weight-bold\">{this.card.toughness}</span></li>\n                    <li>Rarity: <span className=\"font-weight-bold\">{this.card.rarity}</span></li>\n                </ul>;\n            this.btnText = 'View Card';\n            this.setState({flipped: true});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-auto mb-3\">\n                <div className=\"card shadow-sm\">\n                    <div className=\"card-body\">\n                        <h5>{this.card.name}</h5>\n                        <div className=\"card-click card-detail mb-2\" onClick={this.flipCard}>\n                            {this.cardDetail}\n                        </div>\n                        <button onClick={this.flipCard} className=\"btn btn-dark btn-block\">\n                            <i className=\"fas fa-chevron-right\"></i> {this.btnText}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport axios from 'axios';\n// import { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Card from './Card';\n\n/*TODO: TWO problems to solve:\n1. Intersection gets called without actually scrolling to cause intersection\n2. the returned data HTML just overwrites the existing data HTML instead of appending\n\nFor item 1, could it be because item is in a wrapping column?\n*/\n\n\nclass Lazyload extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            card_original_length: props.length,\n            card_list_new: [],\n            pageSize: 'pageSize=10',\n            pageNum: 3,\n            lazyLoading: false,\n            prevY: 0,\n            pages: [{id: 1}]\n        };\n    }\n\n    loadData = () => {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&${this.state.pageSize}&page=${this.state.pageNum}`)\n\n            .then(res => {\n                this.setState({\n                    card_list_new: res.data.cards,\n                    pageNum: this.state.pageNum + 1,\n                    lazyLoading: false,\n                    pages: this.state.pages.concat({id: this.state.pages.length + 1})\n                });\n                //This seems to work, but gets called before actual scroll intersection\n                //and replaces existing data HTML\n                // this.setIO();\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    lazyLoad = () => {\n        if(this.state.card_list_new === undefined || this.state.card_list_new.length === 0) {\n            if (this.state.lazyLoading === false) {\n                return;\n            } else {\n                return <Spinner />\n            }\n        } else {\n            return (\n                <React.Fragment>\n                    {this.state.card_list_new.map(item => (\n                        <Card key={item.id} card={item} />\n                    ))}\n                    <div ref={el => this.element = el} className=\"row-marker\"></div>\n                </React.Fragment>\n            );\n        }\n    }\n\n    // pageCall = () => {\n    //     const pages = this.state.pages;\n    //     console.log('render area pages', pages);\n    //     return (\n    //         pages.map(index => (\n    //             console.log('index.id', index.id)\n    //             // if (index.id === pages.length + 1) {\n    //                 // <React.Fragment key={index.id}>\n    //                 //     <div ref={el => this.element = el} className=\"row-marker\"></div>\n    //                 //     {this.lazyLoad()}\n    //                 // </React.Fragment>\n    //             // }\n    //         ))\n    //     )\n    // }\n\n    setIO = () => {\n        const options = {\n            root: document.querySelector(\".row\"),\n            rootMargin: \"0px 0px 0px 0px\",\n            threshold: 1\n        };\n\n        this.isLeaving = false;\n\n        this.observer = new IntersectionObserver(\n            entries => {\n                entries.forEach(entry => {\n                    const { isIntersecting/*, isVisible*/ } = entry;\n                    // console.log('entry',entry);\n                    //TODO could be intersecting too soon\n                    // if (entry.intersectionRatio > 0) {\n                    //     entry.target.classList.add('in-viewport');\n                    // } else {\n                    //     entry.target.classList.remove('in-viewport');\n                    // }\n\n\n                    if (isIntersecting) {\n                        if (this.state.card_original_length > 0) {\n                            console.log('Intersection Occurred and loading Data ...');\n                            this.loadData();\n                            this.setState({lazyLoading: true});\n                        }\n                        this.observer = this.observer.disconnect();\n                    }\n                });\n            },\n            options\n        );\n        this.observer.observe(this.element);\n        //after first lazy load is called, new element must be created for observer\n    }\n\n    componentDidMount() {\n        // if (this.state.card_original_length > 0) {\n        //     this.setIO();\n        // }\n        this.setIO();\n    }\n\n    /*\n     return (\n     <Consumer>\n     {value => {\n\n     }}\n     </Consumer>\n     )\n     */\n\n    render() {\n        //TODO: HERE create a pages array and map through them to render each new page without overwriting the previous result\n        // const pages = this.state.pages;\n\n        return (\n            // pages.map(index => (\n            // <React.Fragment>\n            //\n            //     if (index.id === pages.length) {\n                    <React.Fragment >\n                        <div ref={el => this.element = el} className=\"row-marker\"></div>\n                        {this.lazyLoad()}\n                    </React.Fragment>\n                // }\n\n        //     </React.Fragment>\n        //     ))\n        )\n    }\n}\n\nexport default Lazyload;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Card from './Card';\nimport Lazyload from './Lazyload';\n\nclass Cards extends Component {\n\n    constructor(props) {\n        super(props);\n        this.searchResults = true;\n    }\n\n    resultCards = (value) => {\n        const { card_list, heading } = value;\n\n        return (\n            <React.Fragment>\n                <h3 className=\"text-center text-white mb-4\">{heading}</h3>\n                <div className=\"row\">\n                    {card_list.map(item => (\n                        <Card key={item.id} card={item} />\n                    ))}\n                    {this.searchResults ? '' : <Lazyload length={card_list.length}/>}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { card_list, results } = value;\n                    this.searchResults = results;\n                    if(card_list === undefined || card_list.length === 0) {\n                        if (this.searchResults === false) {\n                            return this.resultCards(value);\n                        } else {\n                            return <Spinner />\n                        }\n                    } else {\n                        return this.resultCards(value);\n                    }\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Cards;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass Sort extends Component {\n    state = {\n        sortType: ''\n    };\n\n\n    sortBy = (dispatch, e) => {\n        e.preventDefault();\n\n        //This will cause the \"loading\" icon to show by clearing payload count\n        dispatch({\n            type: 'SORT_CARDS',\n            payload: []\n        });\n\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards?contains=originalType&${process.env.REACT_APP_MAIN_FILTER}&pageSize=20&orderBy=${this.state.sortType}`)\n\n            .then(res => {\n                dispatch({\n                   type: 'SORT_CARDS',\n                    payload: res.data.cards,\n                    currSortType: this.state.sortType\n                });\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    onChange = (e) => {\n        this.setState({sortType: e});\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <form onSubmit={this.sortBy.bind(this, dispatch)} className=\"form-inline my-2 my-lg-0\">\n                            <DropdownButton id=\"dropdown-item-button\" title=\"Sort By\" variant=\"secondary\" name=\"sortType\" onSelect={this.onChange}>\n                                <Dropdown.Item as=\"button\" eventKey=\"name\">Name</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"type\">Type</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"artist\">Artist</Dropdown.Item>\n                                <Dropdown.Item as=\"button\" eventKey=\"setName\">Set Name</Dropdown.Item>\n                            </DropdownButton>\n                        </form>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Sort;","import React from 'react';\nimport Cards from '../cards/Cards';\nimport Sort from '../cards/Sort';\n\nconst Index = () => {\n    return (\n       <React.Fragment>\n           <Sort />\n           <Cards />\n       </React.Fragment>\n    )\n}\n\nexport default Index;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport defaultCard from '../layout/default_card.jpg';\n\nclass Details extends Component {\n    state = {\n        card: {}\n    }\n\n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_HEROKU_CORS}https://api.magicthegathering.io/v1/cards/${this.props.match.params.id}`)\n            .then(res => {\n                this.setState({card: res.data.card});\n            })\n            .catch(err => console.log('error',err));\n    }\n\n    render() {\n        const { card } = this.state;\n        if(\n            card === undefined ||\n            Object.keys(card).length === 0\n        ) {\n            return <Spinner />\n        } else {\n            return (\n                <React.Fragment>\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4 mt-0\"><i className=\"fas fa-chevron-left\"></i> Back</Link>\n                    <div className=\"row justify-content-center mb-3\">\n                        <div className=\"detail card shadow-sm mb-2\">\n                            <div className=\"card-body\">\n                                <div>\n                                    <img src={card.imageUrl ? card.imageUrl : defaultCard} alt={card.name} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"detail card-info float-left\">\n                            <ul className=\"text-white\">\n                                <li>Name: <span className=\"font-weight-bold\">{card.name}</span></li>\n                                <li>Artist: <span className=\"font-weight-bold\">{card.artist}</span></li>\n                                <li>Set Name: <span className=\"font-weight-bold\">{card.setName}</span></li>\n                                <li>Type: <span className=\"font-weight-bold\">{card.type}</span></li>\n                                <li>Original Type: <span className=\"font-weight-bold\">{card.originalType}</span></li>\n                                <li>Power: <span className=\"font-weight-bold\">{card.power}</span></li>\n                                <li>Toughness: <span className=\"font-weight-bold\">{card.toughness}</span></li>\n                                <li>Flavor: <span className=\"font-weight-bold\">{card.flavor}</span></li>\n                                <li>Rarity: <span className=\"font-weight-bold\">{card.rarity}</span></li>\n                            </ul>\n                        </div>\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default Details;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Details from './components/cards/Details';\nimport { Provider } from './context';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n                <React.Fragment>\n                    <Navbar />\n                    <div className=\"container-fluid justify-content-center main-container\">\n                        <Switch>\n                            <Route path=\"/\" component={Index}/>\n                            <Route path=\"/details/card/:id\" component={Details}/>\n                        </Switch>\n                    </div>\n                </React.Fragment>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default_card.5329c291.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mtg_logo.9c928612.png\";","module.exports = __webpack_public_path__ + \"static/media/fingers.748b5b62.gif\";"],"sourceRoot":""}